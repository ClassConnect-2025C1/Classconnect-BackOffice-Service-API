name: Python Package without Conda

on:
  push:
  pull_request:
    branches: [main, develop]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # make the app hit the CI Mongo container
      MONGO_URI: mongodb://localhost:27017
      MONGO_DB: classconnect_test

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requirements.txt
          pip install flake8 pytest-cov

      - name: 🧹 Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: 🧪 Test with pytest and collect coverage
        run: |
          pytest --cov=./ --cov-report=xml

      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

      - name: 🔍 Check coverage threshold (75 %)
        run: |
          echo "📊 Checking minimum required coverage…"
          COV=$(awk '/^TOTAL/{print substr($NF,1,length($NF)-1)}' < <(coverage report))
          echo "Coverage obtained: $COV%"
          python - <<'PY'
          import os, sys
          cov = float(os.environ["COV"])
          if cov < 75:
              print("❌ Coverage below 75 %. Failing.")
              sys.exit(1)
          print("✅ Coverage OK.")
          PY

      - name: 🚀 Deploy to Render (main branch only)
        if: github.ref == 'refs/heads/main' && success()
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
